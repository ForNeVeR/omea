//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OmniaMea {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Stringtable {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Stringtable() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OmniaMea.Stringtable", typeof(Stringtable).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Omea Plugins.
        /// </summary>
        internal static string AboutPluginsCommandText {
            get {
                return ResourceManager.GetString("AboutPluginsCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Omea Plugins.
        /// </summary>
        internal static string AboutPluginsCommandTooltip {
            get {
                return ResourceManager.GetString("AboutPluginsCommandTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes will take effect after Omea restart.
        /// </summary>
        internal static string ChangesAfterRestart {
            get {
                return ResourceManager.GetString("ChangesAfterRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load plugin..
        /// </summary>
        internal static string CouldNotLoadPlugin {
            get {
                return ResourceManager.GetString("CouldNotLoadPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string Disabled {
            get {
                return ResourceManager.GetString("Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        internal static string DownloadCommandText {
            get {
                return ResourceManager.GetString("DownloadCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download More Plugins.
        /// </summary>
        internal static string DownloadCommandTooltip {
            get {
                return ResourceManager.GetString("DownloadCommandTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string EnabledColumnHeader {
            get {
                return ResourceManager.GetString("EnabledColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        internal static string File {
            get {
                return ResourceManager.GetString("File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Plugin Assemblies.
        /// </summary>
        internal static string JobLoadPluginAssemblies {
            get {
                return ResourceManager.GetString("JobLoadPluginAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load plugin assembly info..
        /// </summary>
        internal static string JobLoadPluginAssemblyInfo {
            get {
                return ResourceManager.GetString("JobLoadPluginAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup {0} Plugin.
        /// </summary>
        internal static string JobStartingPlugin {
            get {
                return ResourceManager.GetString("JobStartingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading plugins….
        /// </summary>
        internal static string LoadingPluginsProgressMessage {
            get {
                return ResourceManager.GetString("LoadingPluginsProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for plugins….
        /// </summary>
        internal static string LookingForPlugins {
            get {
                return ResourceManager.GetString("LookingForPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to disable loading the {0} plugin? It can be enabled back at Options | Omea | Plugins..
        /// </summary>
        internal static string MessageBoxDisableFailedPlugin {
            get {
                return ResourceManager.GetString("MessageBoxDisableFailedPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Loading Plugin – Omea.
        /// </summary>
        internal static string MessageBoxFailedPluginTitle {
            get {
                return ResourceManager.GetString("MessageBoxFailedPluginTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} plugin could not be loaded..
        /// </summary>
        internal static string MessageBoxPluginCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("MessageBoxPluginCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Omea Plugins were not found in this assembly..
        /// </summary>
        internal static string NoPluginsInAssembly {
            get {
                return ResourceManager.GetString("NoPluginsInAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a plugin.
        /// </summary>
        internal static string NotAPlugin {
            get {
                return ResourceManager.GetString("NotAPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous.
        /// </summary>
        internal static string PluginAuthorUnavailableText {
            get {
                return ResourceManager.GetString("PluginAuthorUnavailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin.
        /// </summary>
        internal static string PluginColumnHeader {
            get {
                return ResourceManager.GetString("PluginColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a third-party plugin.
        /// </summary>
        internal static string PluginDescDebug_IsNonPrimary {
            get {
                return ResourceManager.GetString("PluginDescDebug_IsNonPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a core Omea plugin.
        /// </summary>
        internal static string PluginDescDebug_IsPrimary {
            get {
                return ResourceManager.GetString("PluginDescDebug_IsPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to from.
        /// </summary>
        internal static string PluginDescDebug_LoadedFrom {
            get {
                return ResourceManager.GetString("PluginDescDebug_LoadedFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This plugin has no description..
        /// </summary>
        internal static string PluginDescriptionUnavailableText {
            get {
                return ResourceManager.GetString("PluginDescriptionUnavailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin icon.
        /// </summary>
        internal static string PluginIcon {
            get {
                return ResourceManager.GetString("PluginIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third-Party Plugin.
        /// </summary>
        internal static string PluginIsNotPrimary {
            get {
                return ResourceManager.GetString("PluginIsNotPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Plugin.
        /// </summary>
        internal static string PluginIsPrimary {
            get {
                return ResourceManager.GetString("PluginIsPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will be loaded on next Omea run.
        /// </summary>
        internal static string PluginWillBeLoaded {
            get {
                return ResourceManager.GetString("PluginWillBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will not be loaded on next Omea run.
        /// </summary>
        internal static string PluginWillNotBeLoaded {
            get {
                return ResourceManager.GetString("PluginWillNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to by.
        /// </summary>
        internal static string PluginWrittenBy {
            get {
                return ResourceManager.GetString("PluginWrittenBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        internal static string RefreshCommandText {
            get {
                return ResourceManager.GetString("RefreshCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        internal static string RefreshCommandTooltip {
            get {
                return ResourceManager.GetString("RefreshCommandTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show _developer info.
        /// </summary>
        internal static string ShowDeveloperInfo {
            get {
                return ResourceManager.GetString("ShowDeveloperInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting plugins….
        /// </summary>
        internal static string StartingPluginsProgressMessage {
            get {
                return ResourceManager.GetString("StartingPluginsProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping {0}….
        /// </summary>
        internal static string StoppingPluginProgressMessage {
            get {
                return ResourceManager.GetString("StoppingPluginProgressMessage", resourceCulture);
            }
        }
    }
}
