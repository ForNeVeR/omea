<?xml version="1.0" encoding="utf-8"?>
<!--
  <copyright company="JetBrains">
  Copyright © 2003-2008 JetBrains s.r.o.
  You may distribute under the terms of the GNU General Public License, as published by the Free Software Foundation, version 2 (see License.txt in the repository root folder).
  </copyright>
-->
<Project DefaultTargets="DeploySetupDeployOnSingleServer" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- TODOS
    I believe we can loop on a target rather than having confusing cascaded msbuild calls
    ie. try to cut all the proj files in the deploy steps down to a single proj file.
    -->
	<PropertyGroup>
		<BuildPath Condition="'$(BuildPath)' == ''">$(MSBuildProjectDirectory)</BuildPath>
		<SolutionsPath>$(BuildPath)\..\Solutions</SolutionsPath>
		<ToolsPath>$(BuildPath)\Tools\</ToolsPath>
		<FrameworkPath>$(BuildPath)\bin</FrameworkPath>
	</PropertyGroup>
	<Import Project="Microsoft.Sdc.Common.tasks" />
	<Target Name="CheckValues">
		<Message Text="Buildtype = $(BuildType) Remote drive = $(DeploySetupRemoteDrive)   test host = $(DeploySetupRemoteHost)" />
	</Target>
	<Target Name="DeploySetupCopyCurrentSingleServerDeploymentToLocal" Condition="'$(DeploySetupRemoteShareName)'!=''">
		<Delete Condition="Exists($(DeploySetupTempDeploymentFrameworkPath))" Files="$(DeploySetupTempDeploymentFrameworkPath)" />
		<!-- <Folder.Create Path="$(DeploySetupTempDeploymentFrameworkPath)"/> -->
		<Delete Condition="Exists('$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj)')" Files="$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive)" />
		<Share.Connect ShareName="$(DeploySetupRemoteShareName)" Machine="$(DeploySetupRemoteHost)" UserName="$(DeploySetupRemoteDomain)\$(DeploySetupRemoteUserName)" Password="$(DeploySetupRemotePassword)" LocalName="$(DeploySetupRemoteDrive)" ResourceType="Disk" Connections="1" />
		<Microsoft.Build.Tasks.Copy Condition="Exists('$(DeploySetupRemoteDrive)\$(DeploySetupSingleServerDeploymentFile)')" SourceFiles="$(DeploySetupRemoteDrive)\$(DeploySetupSingleServerDeploymentFile)" DestinationFiles="$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj" />
		<Microsoft.Build.Tasks.Copy Condition="Exists('$(DeploySetupRemoteDrive)\$(DeploySetupSingleServerPropertyFile)')" SourceFiles="$(DeploySetupRemoteDrive)\$(DeploySetupSingleServerPropertyFile)" DestinationFolder="$(DeploySetupTempDeploymentFrameworkPath)" />
		<CreateItem Include="$(DeploySetupRemoteDrive)\$(DeploySetupRemoteMSIPath)\*">
			<Output TaskParameter="Include" ItemName="MsisToCopy" />
		</CreateItem>
		<Microsoft.Build.Tasks.Copy SourceFiles="@(MsisToCopy)" DestinationFolder="$(DeploySetupTempDeploymentFrameworkPath)" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive)" />
	</Target>
	<Target Name="DeploySetupRemoveCurrentSingleServerDeployment" Condition="Exists('$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj')">
		<Message Text="TempSingleServerDeployment.proj exists on the deployment share.  Attempting to uninstall deployed application..." />
		<MSBuild Projects="$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj" Properties="DeploymentMethod=Uninstall;&#xD;&#xA;                                             DeploymentPropertyPath=$(DeploySetupTempDeploymentFrameworkPath);&#xD;&#xA;                                             DeploymentMsiPath=$(DeploySetupTempDeploymentFrameworkPath)" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive)" />
		<Share.Connect ShareName="$(DeploySetupRemoteShareName)" Machine="$(DeploySetupRemoteHost)" UserName="$(DeploySetupRemoteDomain)\$(DeploySetupRemoteUserName)" Password="$(DeploySetupRemotePassword)" LocalName="$(DeploySetupRemoteDrive)" ResourceType="Disk" Connections="1" />
		<CreateItem Include="&#xD;&#xA;            $(DeploySetupRemoteDrive)\*.xml;&#xD;&#xA;            $(DeploySetupRemoteDrive)\*.proj;&#xD;&#xA;            $(DeploySetupRemoteDrive)\Msi\*.Msi;&#xD;&#xA;            $(DeploySetupRemoteDrive)\Msi\*">
			<Output TaskParameter="Include" ItemName="ManifestFilesForDelete" />
		</CreateItem>
		<File.Delete Files="@(ManifestFilesForDelete)" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive)" />
	</Target>
	<Target Name="DeploySetupDisplayUninstallSkippedMessage" Condition="!Exists('$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj')">
		<Message Text="SingleServer uninstall skipped as the project file does not exist on the deployment share." />
	</Target>
	<Target Name="DeploySetupDeployOnSingleServer" DependsOnTargets="DeploySetupDeployOnSingleServerCheck;DeploySetupDeployOnSingleServerInternal" />
	<Target Name="DeploySetupDeployOnSingleServerCheck" DependsOnTargets="DeploySetupDeployOnSingleServerInternal" Condition="'$(DeploySetupRemoteHost)'==''">
		<Message Text="Skipping Deploy Phase since DeploySetupRemoteHost property is empty." Importance="High" />
	</Target>
	<Target Name="DeploySetupDeployOnSingleServerInternal" Condition="'$(DeploySetupRemoteHost)'!=''" DependsOnTargets="DeploySetupCheckProperties;&#xD;&#xA;                            DeploySetupCopyCurrentSingleServerDeploymentToLocal;&#xD;&#xA;                            DeploySetupRemoveCurrentSingleServerDeployment;&#xD;&#xA;                            DeploySetupDisplayUninstallSkippedMessage">
		<MSBuild Projects="$(DeploySetupDeploymentFrameworkPath)\$(DeploySetupSingleServerDeploymentFile)" Properties="DeploymentMethod=Install;&#xD;&#xA;                                             DeploymentPropertyPath=$(DeploySetupSolutionDeploymentPropertyPath);&#xD;&#xA;                                             DeploymentMsiPath=$(DeploySetupSolutionDeploymentMsiPath)" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive) " Condition="'$(DeploySetupRemoteShareName)'!=''" />
		<Share.Connect ShareName="$(DeploySetupRemoteShareName)" Machine="$(DeploySetupRemoteHost)" UserName="$(DeploySetupRemoteDomain)\$(DeploySetupRemoteUserName)" Password="$(DeploySetupRemotePassword)" LocalName="$(DeploySetupRemoteDrive)" ResourceType="Disk" Connections="1" Condition="'$(DeploySetupRemoteShareName)'!=''" />
		<Microsoft.Build.Tasks.Copy Condition="'$(DeploySetupRemoteShareName)'!=''" SourceFiles="$(DeploySetupDeploymentFrameworkPath)\$(DeploySetupSingleServerDeploymentFile)" DestinationFolder="$(DeploySetupRemoteDrive)" />
		<Microsoft.Build.Tasks.Copy Condition="'$(DeploySetupRemoteShareName)'!=''" SourceFiles="$(DeploySetupSolutionDeploymentPropertyPath)\$(DeploySetupSingleServerPropertyFile)" DestinationFolder="$(DeploySetupRemoteDrive)" />
		<CreateItem Include="$(WixDropPath)\*">
			<Output TaskParameter="Include" ItemName="MsiPathCopyFiles" />
		</CreateItem>
		<Microsoft.Build.Tasks.Copy Condition="'$(DeploySetupRemoteShareName)'!=''" SourceFiles="@(MsiPathCopyFiles)" DestinationFolder="$(DeploySetupRemoteDrive)\$(DeploySetupRemoteMSIPath)" />
		<Share.Disconnect ShareName="$(DeploySetupRemoteDrive)" Condition="'$(DeploySetupRemoteShareName)'!=''" />
	</Target>
	<!-- Note this only works for single server installs since they have appropriate properties in Deploy.Properties
         Some rework required to get rigs working (but not sure if this is a requirement) -->
	<Target Name="TestSingleMsi" DependsOnTargets="DeploySetupCheckProperties">
		<Error Condition="'$(TestMsi)'==''" Text="The property TestMsi must be specified to run this project file." />
		<Error Condition="'$(TestInstallType)'==''" Text="The property TestInstallType must be set to INSTALL or UNINSTALL to run this project file." />
		<MSBuild Projects="$(BuildPath)\Deployment\Framework\Deployment.proj" Properties="DeploymentMsiFile=$(TestMsi);&#xD;&#xA;                                             DeploymentMethod=$(TestInstallType);&#xD;&#xA;                                             DeploymentShareName=C$;&#xD;&#xA;                                             DeploymentPath=$(DeploymentPath);&#xD;&#xA;                                             DeploymentDrive=$(DeploySetupRemoteDrive);&#xD;&#xA;                                             DeploymentDomain=$(DeploySetupRemoteDomain);&#xD;&#xA;                                             DeploymentUserName=$(DeploySetupRemoteUserName);&#xD;&#xA;                                             DeploymentPassword=$(DeploySetupRemotePassword);&#xD;&#xA;                                             DeploymentMsiPath=$(DeploySetupSolutionDeploymentMsiPath);&#xD;&#xA;                                             DeploymentPropertyPath=$(DeploySetupSolutionDeploymentPropertyPath);&#xD;&#xA;                                             DeploymentHost=$(DeploySetupRemoteHost);&#xD;&#xA;                                             DeploymentPropertyFile=$(DeploySetupSingleServerPropertyFile);&#xD;&#xA;                                             EventSource=&quot;$(EventSource)&quot;;&#xD;&#xA;                                             LogPath=$(BuildPath)\Deployment\MsiLogs;&#xD;&#xA;                                             BinPath=$(BuildPath)\Deployment\Framework\bin;&#xD;&#xA;                                             DeploymentFrameworkPath=$(BuildPath)\Deployment\Framework" Targets="Deploy" />
	</Target>
	<Target Name="DeploySetupCheckProperties" DependsOnTargets="CheckValues">
		<!-- Check that required properties have values -->
		<Error Condition="'$(DeploySetupRemoteDrive)'==''" Text="The property DeploySetupRemoteDrive must be specified to run this project file." />
		<Error Condition="'$(DeploySetupRemoteDomain)'==''" Text="The property DeploySetupRemoteDomain must be specified to run this project file." />
		<Error Condition="'$(DeploySetupRemoteUserName)'==''" Text="The property DeploySetupRemoteUserName must be specified to run this project file." />
		<Error Condition="'$(DeploySetupRemotePassword)'==''" Text="The property DeploySetupRemotePassword must be specified to run this project file." />
		<Error Condition="'$(DeploySetupDeploymentFrameworkPath)'==''" Text="The property DeploySetupDeploymentFrameworkPath must be specified to run this project file." />
		<Error Condition="'$(DeploySetupTempDeploymentFrameworkPath)'==''" Text="The property DeploySetupTempDeploymentFrameworkPath must be specified to run this project file." />
		<Error Condition="'$(DeploySetupSingleServerDeploymentFile)'==''" Text="The property DeploySetupSinglesServerDeploymentFile must be specified to run this project file." />
		<Error Condition="'$(DeploySetupSingleServerPropertyFile)'==''" Text="The property DeploySetupSingleServerPropertyFile must be specified to run this project file." />
		<Error Condition="'$(DeploySetupSolutionDeploymentPropertyPath)'==''" Text="The property DeploySetupSolutionDeploymentPropertyPath must be specified to run this project file." />
		<Error Condition="'$(DeploySetupSolutionDeploymentMsiPath)'==''" Text="The property DeploySetupSolutionDeploymentMsiPath must be specified to run this project file." />
		<Delete Condition="Exists('$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj')" Files="$(DeploySetupDeploymentFrameworkPath)\TempSingleServerDeployment.proj" />
	</Target>
</Project>